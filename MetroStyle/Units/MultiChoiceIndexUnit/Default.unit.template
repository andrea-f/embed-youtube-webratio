#?delimiters [%, %], [%=, %]
<wr:LayoutParameter label="Show Header" name="show-header" type="boolean" default="true">
Defines the rendition of the header on the top.
Allowed values are: true (default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Alternate Rows" name="use-alternate" type="boolean" default="true">
Defines the usage of alternates colours for each line.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Compact table" name="compact" type="boolean" default="false">
Makes tables more compact by cutting cell padding in half.
</wr:LayoutParameter>
<wr:LayoutParameter label="Links Position" name="link-position" type="enum" values="right|on_row" default="right">
Defines the rendition of the sub levels links.
Allowed values are:
- right (default): places the links on the right
- on_row: places the first link on the attributes
</wr:LayoutParameter>
<wr:LayoutParameter label="Buttons Position" name="button-position" type="enum" values="top|bottom|both" default="bottom">
Defines where to position the buttons to render submit links.
Allowed values are:
- top: places the buttons at the top
- bottom (default): places the buttons at the bottom
- both: places the buttons at the top and bottom
</wr:LayoutParameter>
<wr:LayoutParameter label="Select All" name="select-all" type="boolean" values="true|false" default="true">
Defines the rendition of a link that allows
to select or deselect all the checkboxes of
the unit.
Allowed values are: true or false(default).
</wr:LayoutParameter>
<wr:LayoutParameter label="Use Empty Unit Message" name="use-empty-unit-message" type="boolean" default="false">
Defines the usage of a message for empty units.
Allowed values are: true(default) or false.
</wr:LayoutParameter>
<wr:LayoutParameter label="Empty Unit Message" name="empty-unit-message" type="string" default="emptyUnitMessage">
Defines the key of the message to use if the unit is empty.
Default value: emptyUnitMessage
</wr:LayoutParameter>

[%

import org.apache.commons.lang.StringUtils
import org.apache.commons.lang.math.NumberUtils

setHTMLOutput()

def unitId = unit["id"]
def blockFactor = unit["blockFactor"]
def isSortable = unit["sortable"]
def isScrollable = blockFactor != "" ? "true": "false"

def links = unit.selectNodes("layout:Link").findAll{it["_exp"]!='t'}
def unitLink = links.empty ? null : links[0]
def link = unitLink?.valueOf("@link")
def layoutId = getLayoutId(unit)

def showHeader = params["show-header"]
def useAlternate = params["use-alternate"]
def compact = params["compact"]
def linkPosition = params["link-position"]
def buttonPosition = params["button-position"]

def selectAll = params["select-all"]
def useEmptyUnitMessage = params["use-empty-unit-message"]
def emptyUnitMessage = params["empty-unit-message"]


//returns true if the given link must be rendered as a form button
def isButton(link){
  def navLink = getById(link["link"])
  if(navLink == null){
    return false
  }
  def linkParams = navLink.selectNodes("LinkParameter").collect{it["source"]}
  if(linkParams.isEmpty()){
    linkParams = getAutomaticLinkParameters(navLink).collect{it["source"]}
  }
  for(param in linkParams){
    if(param?.endsWith("Checked")){
      return true;
    }
  }
  return false
}

def buttonsCount = unit.selectNodes("layout:Link").findAll{ isButton(it) }.size();
%]
[% if (useEmptyUnitMessage != "true") { %]
<c:if test="${not(empty <wr:Id context="unit"/>) and (<wr:Id context="unit"/>.dataSize gt 0)}">
[% } else { %]
<c:choose>
<c:when test="${not(empty <wr:Id context="unit"/>) and (<wr:Id context="unit"/>.dataSize gt 0)}">
[% } %]
	<wr:Frame>
		<div class="plain <wr:StyleClass/>">
			<div class="plain MultiChoiceIndexUnit">
				<c:set var="btFieldError"><html:errors property="<wr:Id context="unit"/>Checked"/></c:set>
				<c:if test="${not (empty btFieldError)}">
					<div class="alert alert-danger alert-dismissable">
						<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
					<html:errors property="<wr:Id context="unit"/>Checked" />
				</div>
				</c:if>
				[% if (buttonsCount > 0 && buttonPosition == "top" || buttonPosition == "both") { %]
					<div class="btn-toolbar">
						<wr:Iterate var="l" context="unit" select="layout:Link">
							[% if (isButton(l)) { %]
								<wr:Link class="btn" type="button" context="l"/>
							[% } %]
						</wr:Iterate>
					</div>
				[% } %]
				<div class="table-responsive">
				<table class="table table-bordered table-hover [% if (compact == "true") { %] table-condensed[% } %][% if (useAlternate == "true") { %] table-striped[% } %]">
					[% if (showHeader == "true") {%]
					<thead>
						<tr>
							<th scope="col" class="<wr:StyleClass/> smallcol">
							[% if (selectAll == "true") {%]
								<script>multiChoiceMap["[%= layoutId%]"] = "all";</script>
								<div class="checkbox">
									<input type="checkbox" id="[%= layoutId%]SelectAll" onclick="toggleCheckboxes('[%= layoutId%]', 'Checked')" class="selectAll"/>
								</div>
								<label class="sr-only" for="[%= layoutId%]SelectAll">Select all rows</label>
							[% } %]
							</th>
						<wr:Iterate var="att" context="unit" select="layout:Attribute">
							<wr:Visible>
					        <th scope="col" class="<wr:StyleClass/>">
					        [% if (isSortable == "true") { %]
					         [% def sortLink = unit.selectSingleNode("layout:Link[@link='" + unit["id"] + att["attribute"] + "']")
						         if(sortLink != null) { %]
						            <wr:Link context="sortLink" class="sort" type="sort"/>
						         [% } else { %]
						            <wr:Label/>
						         [% } %]
						     [% } else { %]
						     	<wr:Label/>
						     [% } %]
					        </th>
	                        </wr:Visible>
					    </wr:Iterate>
						<wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
							[% if (!isButton(l) && (linkPosition == "right" || ((linkPosition == "on_row") && index > 0))) { %]
								<wr:Visible><th scope="col" class="<wr:StyleClass/> smallcol"></th></wr:Visible>
							[% } %]
						</wr:Iterate>	
						</tr>
					</thead>
					[% } %]
				<tbody>
				<c:forEach var="current" varStatus="status" items="${<wr:Id context="unit"/>.data}">
					<c:set var="index" value="${status.index}"/>	
						<tr>	
							<td class="<wr:StyleClass/> smallcol">				
							  <div class="checkbox">
							  	<html:multibox styleId="[%= layoutId%]_${index}" property="<wr:Id context="unit"/>Checked" styleClass="checkBox"><c:out value="${<wr:Id context="unit"/>.key[index]}"/></html:multibox>
							  </div>
							  <label class="sr-only" for="[%= layoutId%]_${index}">Select row</label>
							</td>
							<wr:Iterate var="attr" context="unit" select="layout:Attribute">
								<wr:Visible>
								<td class="<wr:StyleClass/> [%=attr["type"]%]">
								[% if ((linkPosition == "on_row") && (!links.empty)) {%]
									<wr:Visible position="'index'">
										<wr:Visible context="unitLink" position="'index'">
											<a href="<wr:URL context="unitLink"/>" class="<wr:StyleClass context="unitLink"/>" onclick="<wr:AjaxURL context="unitLink" />">
										</wr:Visible>
										<wr:Value/>
										<wr:Visible context="unitLink" position="'index'">
											</a>
										</wr:Visible>
									</wr:Visible>
								[% } else {%]
										<wr:Value/>
								[% } %]
								</td>
							    </wr:Visible>
							</wr:Iterate>
						   <wr:Iterate var="l" context="unit" select="layout:Link[string(@_exp) != 't']">
							[% if (!isButton(l)) { %]
						      <wr:Visible>
								   	[% if (linkPosition == "right" || ((linkPosition == "on_row") && index > 0)) { %]
								   		<td class="<wr:StyleClass/> smallcol">
											<wr:Link class="btn-small"/>
										</td>
									[% } %]
								</wr:Visible>
							[% } %]
						   </wr:Iterate>
						</tr>
					</c:forEach>
					</tbody>
				</table>
				</div>
				[% if (buttonsCount > 0 && buttonPosition == "bottom" || buttonPosition == "both") { %]
					<div class="btn-toolbar">
						<wr:Iterate var="l" context="unit" select="layout:Link">
							[% if (isButton(l)) { %]
								<wr:Link class="btn" type="button" context="l"/>
							[% } %]
						</wr:Iterate>
					</div>
				[% } %]
			</div>
		</div>
	</wr:Frame>
[% if (useEmptyUnitMessage != "true") { %]
</c:if>
[% } else { %]
</c:when>
<c:otherwise>
	<wr:Frame>
		<div class="alert alert-info empty-message <wr:StyleClass/>">
			<bean:message key="[%printJSPTagValue(emptyUnitMessage)%]"/>
		</div>
	</wr:Frame>
</c:otherwise>
</c:choose>
[% } %]